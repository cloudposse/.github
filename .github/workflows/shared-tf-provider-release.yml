name: "Shared TF provider release branches"

on:
  workflow_call:
    inputs:
      runs-on:
        description: "Overrides job runs-on setting (json-encoded list)"
        type: string
        required: false
        default: '["ubuntu-latest"]'

permissions: {}

jobs:
  goreleaser:
    runs-on: "self-hosted-large"
    environment: release
    steps:
      - uses: actions/create-github-app-token@v1
        id: github-app
        with:
          app-id: ${{ vars.BOT_GITHUB_APP_ID }}
          private-key: ${{ secrets.BOT_GITHUB_APP_PRIVATE_KEY }}

      - name: Install Git & GPG
        run: |-
          sudo apt-get update && sudo apt-get install -y git gnupg2

      - name: Checkout
        uses: actions/checkout@v3

      - name: Unshallow
        run: |-
          git fetch --prune --unshallow

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.20"

#      - name: Import GPG key
#        id: import_gpg
#        uses: crazy-max/ghaction-import-gpg@v5
#        with:
#          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
#          passphrase: ${{ secrets.GPG_PRIVATE_KEY_PASSPHRASE }}

      - name: Check disk space before
        shell: bash
        run: |-
          printf "\nPWD is %s\ndf -h %s\n\n" "$(pwd -P)" "$(pwd -P)"
          df -h $(pwd -P)
          if [[ -n $TMPDIR ]]; then
            printf "\n\nTMPDIR set to %s\ndf -h %s\n\n" "$TMPDIR" "$TMPDIR"
            df -h "$TMPDIR"
          else 
            printf "\n\nTMPDIR not set, showing space in /tmp\n\n"
            df -h /tmp
          fi
          printf "\n\nAll disk space:\n"
          df -h

#      - name: Run GoReleaser
#        uses: goreleaser/goreleaser-action@v4
#        with:
#          version: latest
#          args: release --clean --parallelism 2 --timeout 180m
#        env:
#          GPG_FINGERPRINT: ${{ steps.import_gpg.outputs.fingerprint }}
#          GITHUB_TOKEN: ${{ steps.github-app.outputs.token }}

      - name: Check disk space after
        if: success() || failure()
        shell: bash
        run: |-
          printf "\nPWD is %s\ndf -h %s\n\n" "$(pwd -P)" "$(pwd -P)"
          df -h $(pwd -P)
          if [[ -n $TMPDIR ]]; then
            printf "\n\nTMPDIR set to %s\ndf -h %s\n\n" "$TMPDIR" "$TMPDIR"
            df -h "$TMPDIR"
          else 
            printf "\n\nTMPDIR not set, showing space in /tmp\n\n"
            df -h /tmp
          fi
          printf "\n\nAll disk space:\n"
          df -h
